/*
 * File: app/controller/main/BqeAssistantMainController.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('BqeApp.controller.main.BqeAssistantMainController', {
    extend: 'Ext.app.Controller',

    config: {
        refs: {
            assistantNavigation: '#assistantNavigation',
            loginAccount: 'loginpanel #loginAccount',
            loginPassword: 'loginpanel #loginPassword',
            loginBtnLogin: 'loginpanel #loginBtnLogin',
            imgMenu: 'assistantnavigation #imgMenu',
            imgSetting: 'assistantnavigation #imgSetting'
        },

        control: {
            "#homeTabPanel": {
                activeitemchange: 'onHomeTabPanelActiveItemChange',
                activate: 'onHomeTabPanelActivate'
            },
            "panel #homeTabPanel": {
                deactivate: 'onHomeTabPanelDeactivate'
            },
            "#loginPanel": {
                initialize: 'onLoginPanelInitialize'
            },
            "loginBtnLogin": {
                tap: 'onLoginFun'
            },
            "imgMenu": {
                tap: 'onMenuTap'
            }
        }
    },

    /*

        TabPanel项改变监听

    */
    onHomeTabPanelActiveItemChange: function(container, value, oldValue, eOpts) {
        this.getAssistantNavigation().getNavigationBar().setTitle(value.title);
    },

    /*
        当主页是活动项的时候执行

    */
    onHomeTabPanelActivate: function(newActiveItem, container, oldActiveItem, eOpts) {
        var me = this;
        if(me.getImgMenu() && me.getImgSetting()){
            if(me.getImgMenu().isHidden() && me.getImgSetting().isHidden()){
                me.getImgMenu().show();
                me.getImgSetting().show();
            }
        }
    },

    /*
        当主页不是活动项的时候执行

    */
    onHomeTabPanelDeactivate: function(oldActiveItem, container, newActiveItem, eOpts) {
        var me = this;
        if(!me.getImgMenu().isHidden() && !me.getImgSetting().isHidden()){
            me.getImgMenu().hide();
            me.getImgSetting().hide();
        }
    },

    onLoginPanelInitialize: function(component, eOpts) {
        var me = this;
        var loginLocalStore = Ext.getStore('LoginStore');
        var indexMylocalStore = loginLocalStore.find("flag","first");

        if(indexMylocalStore != -1){
            //历史记录的帐号
            var historyAccount = loginLocalStore.getAt(indexMylocalStore).get('loginAccount');
            me.getLoginAccount().setValue(historyAccount);
        }
    },

    onLoginFun: function(button, e, eOpts) {
        var me = this;
        var txtLoginAccount = me.getLoginAccount().getValue();
        var txtLoginPassword = me.getLoginPassword().getValue();

        if(Ext.isEmpty(txtLoginAccount) || Ext.isEmpty(txtLoginPassword)){
            alert('用户名或密码不能为空!');
            //me.createOverlay(me.getTxtAccount(), "用户名或密码不能为空!");
            return;
        }

        Ext.Viewport.setMasked({
            xtype:'loadmask',
            message:'正在登录'
        });

        Ext.data.JsonP.request({
            url: 'http://192.168.0.100/appserver/server.php/employee/login',
            //传递参数
            params: {
                account : txtLoginAccount,
                password: txtLoginPassword
            },
            timeout: 30000,//超时时间
            callbackKey: '',//回调函数名，默认为callback
            callback: function() { //回调函数，不管请求成功与否都执行
            },
            //请求成功时执行捉拿
            success: function(result) {
                console.log(result);

                // 保存信息到本地
                me.saveToLocal(txtLoginAccount,'first');

                //登录成功操作
                if(result.result){
                    me.getAssistantNavigation().pop();
                }else{
                    alert('登录失败!');
                }
                Ext.Viewport.unmask();
            },
            //请求失败时执行操作
            failure: function() {
                alert('请求登录失败!');
                Ext.Viewport.unmask();
            }
        });
    },

    /*

         侧滑

    */
    onMenuTap: function(button, e, eOpts) {
        var viewport = Ext.Viewport.down('mymenu');//自定义的menu组件
        var menu = null;

        if(viewport === null){
            menu =Ext.Viewport.down('mymenu') || Ext.widget('slidingmenu');
            Ext.Viewport.setMenu(menu,{
                side:'left',//从左边滑出
                // reveal: true,
                cover:false//menu有遮罩效果
            });
            Ext.Viewport.showMenu('left');//从左边滑出menu组件

        }else{
            menu =viewport;
            Ext.Viewport.setMenu(menu,{
                side:'left',
                // reveal: true,
                cover:false
            });
            Ext.Viewport.showMenu('left');
            // Ext.Viewport.toggleMenu('left');

        }

    },

    saveToLocal: function(loginAccount, flag) {
        var loginLocalStore = Ext.getStore('LoginStore');
        loginLocalStore.removeAll();
        loginLocalStore.getProxy().clear();
        loginLocalStore.sync();

        loginLocalStore.add({
            loginAccount : loginAccount,
            flag:flag
        });
        loginLocalStore.sync();
    },

    /*
         隐藏首页头部按钮

    */
    hiddenTitleWideget: function() {
        var me = this;
        if(!me.getImgMenu().isHidden() && !me.getImgSetting().isHidden()){
            me.getImgMenu().hide();
            me.getImgSetting().hide();
        }

    },

    /*
        显示首页头部按钮

    */
    showTitleWideget: function() {
        var me = this;
        if(me.getImgMenu() ){
            if(me.getImgMenu().isHidden() && me.getImgSetting().isHidden()){
                me.getImgMenu().show();
                me.getImgSetting().show();
            }
        }
    }

});